// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test page App snap shoot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="chakra-ui-light"
  >
    <div>
      <div
        class="Toastify"
      />
      <div
        class="chakra-stack css-v70sdz"
      >
        <h3
          class="chakra-heading css-1dklj6k"
        >
          Login
        </h3>
        <div
          class="chakra-stack css-1811skr"
        >
          <div
            class="chakra-skeleton css-2loqim"
          >
            <div
              class="chakra-select__wrapper css-42b2qy"
            >
              <select
                class="chakra-select css-161pkch"
                data-testid="select-input"
              >
                <option
                  value=""
                >
                  Select user
                </option>
              </select>
              <div
                class="chakra-select__icon-wrapper css-iohxn1"
              >
                <svg
                  aria-hidden="true"
                  class="chakra-select__icon"
                  focusable="false"
                  role="presentation"
                  style="width: 1em; height: 1em; color: currentColor;"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                    fill="currentColor"
                  />
                </svg>
              </div>
            </div>
          </div>
          <button
            class="chakra-button css-betff9"
            data-loading=""
            data-testid="submit-button"
            disabled=""
            type="button"
          >
            <div
              class="chakra-button__spinner chakra-button__spinner--start css-149izd1"
            >
              <div
                class="chakra-spinner css-1fc7edv"
              >
                <span
                  class="css-8b45rq"
                >
                  Loading...
                </span>
              </div>
            </div>
            Waiting
          </button>
        </div>
      </div>
      <span
        hidden=""
        id="__chakra_env"
      />
    </div>
    <div
      class="chakra-portal"
    >
      <div
        aria-label="Notifications"
        aria-live="polite"
        id="chakra-toast-manager-top"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <div
        aria-label="Notifications"
        aria-live="polite"
        id="chakra-toast-manager-top-left"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
      <div
        aria-label="Notifications"
        aria-live="polite"
        id="chakra-toast-manager-top-right"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
      <div
        aria-label="Notifications"
        aria-live="polite"
        id="chakra-toast-manager-bottom-left"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
      <div
        aria-label="Notifications"
        aria-live="polite"
        id="chakra-toast-manager-bottom"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <div
        aria-label="Notifications"
        aria-live="polite"
        id="chakra-toast-manager-bottom-right"
        role="region"
        style="position: fixed; z-index: var(--toast-z-index, 5500); pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
  </body>,
  "container": <div>
    <div
      class="Toastify"
    />
    <div
      class="chakra-stack css-v70sdz"
    >
      <h3
        class="chakra-heading css-1dklj6k"
      >
        Login
      </h3>
      <div
        class="chakra-stack css-1811skr"
      >
        <div
          class="chakra-skeleton css-2loqim"
        >
          <div
            class="chakra-select__wrapper css-42b2qy"
          >
            <select
              class="chakra-select css-161pkch"
              data-testid="select-input"
            >
              <option
                value=""
              >
                Select user
              </option>
            </select>
            <div
              class="chakra-select__icon-wrapper css-iohxn1"
            >
              <svg
                aria-hidden="true"
                class="chakra-select__icon"
                focusable="false"
                role="presentation"
                style="width: 1em; height: 1em; color: currentColor;"
                viewBox="0 0 24 24"
              >
                <path
                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  fill="currentColor"
                />
              </svg>
            </div>
          </div>
        </div>
        <button
          class="chakra-button css-betff9"
          data-loading=""
          data-testid="submit-button"
          disabled=""
          type="button"
        >
          <div
            class="chakra-button__spinner chakra-button__spinner--start css-149izd1"
          >
            <div
              class="chakra-spinner css-1fc7edv"
            >
              <span
                class="css-8b45rq"
              >
                Loading...
              </span>
            </div>
          </div>
          Waiting
        </button>
      </div>
    </div>
    <span
      hidden=""
      id="__chakra_env"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test page Error snap shot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="chakra-stack css-v1eac8"
      >
        <div
          class="css-1e6ma0l"
        >
          <h2
            class="chakra-heading css-tokvmb"
          >
            404 - PAGE NOT FOUND
          </h2>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="chakra-stack css-v1eac8"
    >
      <div
        class="css-1e6ma0l"
      >
        <h2
          class="chakra-heading css-tokvmb"
        >
          404 - PAGE NOT FOUND
        </h2>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test page Login snap shoot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="chakra-stack css-8bn5vh"
      >
        <h3
          class="chakra-heading css-0"
        >
          Login
        </h3>
        <div
          class="chakra-stack css-1kkt86i"
        >
          <div
            class="chakra-skeleton css-1ydjpcy"
          >
            <div
              class="chakra-select__wrapper css-42b2qy"
            >
              <select
                class="chakra-select css-1ik61og"
                data-testid="select-input"
              >
                <option
                  value=""
                >
                  Select user
                </option>
              </select>
              <div
                class="chakra-select__icon-wrapper css-162mkon"
              >
                <svg
                  aria-hidden="true"
                  class="chakra-select__icon"
                  focusable="false"
                  role="presentation"
                  style="width: 1em; height: 1em; color: currentColor;"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                    fill="currentColor"
                  />
                </svg>
              </div>
            </div>
          </div>
          <button
            class="chakra-button css-4xx2wk"
            data-loading=""
            data-testid="submit-button"
            disabled=""
            type="button"
          >
            <div
              class="chakra-button__spinner chakra-button__spinner--start css-i5qkey"
            >
              <div
                class="chakra-spinner css-1plzyg6"
              >
                <span
                  class="css-8b45rq"
                >
                  Loading...
                </span>
              </div>
            </div>
            Waiting
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="chakra-stack css-8bn5vh"
    >
      <h3
        class="chakra-heading css-0"
      >
        Login
      </h3>
      <div
        class="chakra-stack css-1kkt86i"
      >
        <div
          class="chakra-skeleton css-1ydjpcy"
        >
          <div
            class="chakra-select__wrapper css-42b2qy"
          >
            <select
              class="chakra-select css-1ik61og"
              data-testid="select-input"
            >
              <option
                value=""
              >
                Select user
              </option>
            </select>
            <div
              class="chakra-select__icon-wrapper css-162mkon"
            >
              <svg
                aria-hidden="true"
                class="chakra-select__icon"
                focusable="false"
                role="presentation"
                style="width: 1em; height: 1em; color: currentColor;"
                viewBox="0 0 24 24"
              >
                <path
                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  fill="currentColor"
                />
              </svg>
            </div>
          </div>
        </div>
        <button
          class="chakra-button css-4xx2wk"
          data-loading=""
          data-testid="submit-button"
          disabled=""
          type="button"
        >
          <div
            class="chakra-button__spinner chakra-button__spinner--start css-i5qkey"
          >
            <div
              class="chakra-spinner css-1plzyg6"
            >
              <span
                class="css-8b45rq"
              >
                Loading...
              </span>
            </div>
          </div>
          Waiting
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test page Nav snap shoot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="css-1m65r4j"
      >
        <div
          class="css-q4hjtx"
        >
          <div
            class="chakra-stack css-chgbhg"
          >
            <nav
              class="chakra-stack css-1mlvmbj"
            >
              <a
                class="chakra-linkbox css-1bklenl"
                href="/questions"
              >
                Home
              </a>
              <a
                class="chakra-linkbox css-1bklenl"
                href="/leaderboard"
              >
                Leaderboard
              </a>
              <a
                class="chakra-linkbox css-1bklenl"
                href="/add"
              >
                New
              </a>
            </nav>
          </div>
          <div
            class="css-70qvj9"
          >
            <button
              aria-controls="menu-list-:r1:"
              aria-expanded="false"
              aria-haspopup="menu"
              class="chakra-button chakra-menu__menu-button css-1w9ecej"
              id="menu-button-:r1:"
              type="button"
            >
              <span
                class="css-xl71ch"
              >
                <div
                  class="css-70qvj9"
                >
                  <span
                    class="chakra-avatar css-1ruhx4w"
                  >
                    <svg
                      aria-label=" avatar"
                      class="chakra-avatar__svg css-16ite8i"
                      role="img"
                      viewBox="0 0 128 128"
                    >
                      <path
                        d="M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z"
                        fill="currentColor"
                      />
                      <path
                        d="M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24"
                        fill="currentColor"
                      />
                    </svg>
                  </span>
                </div>
              </span>
            </button>
            <div
              class="css-0"
              style="visibility: hidden; position: absolute; min-width: max-content; inset: 0 auto auto 0;"
            >
              <div
                aria-orientation="vertical"
                class="chakra-menu__menu-list css-sjt5nk"
                id="menu-list-:r1:"
                role="menu"
                style="transform-origin: var(--popper-transform-origin); opacity: 0; visibility: hidden; transform: scale(0.8) translateZ(0);"
                tabindex="-1"
              >
                <button
                  class="chakra-menu__menuitem css-1k756t9"
                  data-index="0"
                  id="menu-list-:r1:-menuitem-:r2:"
                  role="menuitem"
                  tabindex="-1"
                  type="button"
                >
                  Logout
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-1m65r4j"
    >
      <div
        class="css-q4hjtx"
      >
        <div
          class="chakra-stack css-chgbhg"
        >
          <nav
            class="chakra-stack css-1mlvmbj"
          >
            <a
              class="chakra-linkbox css-1bklenl"
              href="/questions"
            >
              Home
            </a>
            <a
              class="chakra-linkbox css-1bklenl"
              href="/leaderboard"
            >
              Leaderboard
            </a>
            <a
              class="chakra-linkbox css-1bklenl"
              href="/add"
            >
              New
            </a>
          </nav>
        </div>
        <div
          class="css-70qvj9"
        >
          <button
            aria-controls="menu-list-:r1:"
            aria-expanded="false"
            aria-haspopup="menu"
            class="chakra-button chakra-menu__menu-button css-1w9ecej"
            id="menu-button-:r1:"
            type="button"
          >
            <span
              class="css-xl71ch"
            >
              <div
                class="css-70qvj9"
              >
                <span
                  class="chakra-avatar css-1ruhx4w"
                >
                  <svg
                    aria-label=" avatar"
                    class="chakra-avatar__svg css-16ite8i"
                    role="img"
                    viewBox="0 0 128 128"
                  >
                    <path
                      d="M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z"
                      fill="currentColor"
                    />
                    <path
                      d="M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24"
                      fill="currentColor"
                    />
                  </svg>
                </span>
              </div>
            </span>
          </button>
          <div
            class="css-0"
            style="visibility: hidden; position: absolute; min-width: max-content; inset: 0 auto auto 0;"
          >
            <div
              aria-orientation="vertical"
              class="chakra-menu__menu-list css-sjt5nk"
              id="menu-list-:r1:"
              role="menu"
              style="transform-origin: var(--popper-transform-origin); opacity: 0; visibility: hidden; transform: scale(0.8) translateZ(0);"
              tabindex="-1"
            >
              <button
                class="chakra-menu__menuitem css-1k756t9"
                data-index="0"
                id="menu-list-:r1:-menuitem-:r2:"
                role="menuitem"
                tabindex="-1"
                type="button"
              >
                Logout
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test page New snap shot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="chakra-stack css-169dxdu"
      >
        <h2
          class="chakra-heading css-0"
        >
          Would You Rather
        </h2>
        <div
          class="css-66s61j"
        >
          <div
            class="chakra-card css-1whsdwu"
          >
            <div
              class="chakra-card__body css-8atqhb"
            >
              <input
                class="chakra-input css-0"
                placeholder="Option 1"
              />
            </div>
          </div>
          <h2
            class="chakra-heading css-0"
          >
            OR
          </h2>
          <div
            class="chakra-card css-1whsdwu"
          >
            <div
              class="chakra-card__body css-8atqhb"
            >
              <input
                class="chakra-input css-0"
                placeholder="Option 2"
              />
            </div>
          </div>
        </div>
        <button
          class="chakra-button css-4xx2wk"
          type="button"
        >
          Create poll
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="chakra-stack css-169dxdu"
    >
      <h2
        class="chakra-heading css-0"
      >
        Would You Rather
      </h2>
      <div
        class="css-66s61j"
      >
        <div
          class="chakra-card css-1whsdwu"
        >
          <div
            class="chakra-card__body css-8atqhb"
          >
            <input
              class="chakra-input css-0"
              placeholder="Option 1"
            />
          </div>
        </div>
        <h2
          class="chakra-heading css-0"
        >
          OR
        </h2>
        <div
          class="chakra-card css-1whsdwu"
        >
          <div
            class="chakra-card__body css-8atqhb"
          >
            <input
              class="chakra-input css-0"
              placeholder="Option 2"
            />
          </div>
        </div>
      </div>
      <button
        class="chakra-button css-4xx2wk"
        type="button"
      >
        Create poll
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
